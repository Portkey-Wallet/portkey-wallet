require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
# require_relative '../node_modules/react-native/scripts/react_native_pods'
# require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, '15.5'
prepare_react_native_project!

production = ENV["PRODUCTION"] == "1"
includeFlipper = ENV["INCLUDE_FLIPPER"] == "true"

use_modular_headers!

target 'Portkey' do

  use_expo_modules!
  post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  # Firebase
  pod 'Firebase', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'FirebaseCoreExtension', :modular_headers => true
  pod 'FirebaseAppCheck', :modular_headers => true
  pod 'FirebaseCrashlytics', :modular_headers => true
  pod 'FirebaseMessaging', :modular_headers => true
  pod 'GTMSessionFetcher', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true

  pod 'FirebaseInstallations', :modular_headers => true
  pod 'GoogleDataTransport', :modular_headers => true
  # pod 'RNFBAnalytics', :modular_headers => true
  # pod 'RNFBApp', :modular_headers => true
  # pod 'RNFBAppCheck', :modular_headers => true
  # pod 'RNFBCrashlytics', :modular_headers => true
  # pod 'RNFBMessaging', :modular_headers => true
  # pod 'RNFBPerf', :modular_headers => true
  pod 'nanopb', :modular_headers => true
  # use_frameworks! :linkage => :static
  # $RNFirebaseAsStaticFramework = true
  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :production => production,
    # enabled hermes
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.." 
  )

  target 'PortkeyTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(installer)
    # __apply_Xcode_12_5_M1_post_install_workaround(installer)
    # to deal with xcode14 sign bug 
  end
end
